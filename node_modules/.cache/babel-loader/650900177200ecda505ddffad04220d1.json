{"ast":null,"code":"import { act } from \"@testing-library/react\";\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE_LOADING_STATE\":\n      return { ...state,\n        showLoadingState: !state.showLoadingState\n      };\n\n    case \"SET_PRODUCTS\":\n      return { ...state,\n        products: action.products\n      };\n\n    case \"ADD_ORDER\":\n      const productIndex = state.products.find(product => product.id === action.id);\n      const newProducts = { ...state.products\n      };\n      newProducts[productIndex].availableCount = newProducts[productIndex].availableCount - 1;\n      const orderProductIndex = state.orederedProducts.find(product => product.id === action.id);\n\n      if (orderProductIndex) {\n        const newOrderedProducts = { ...state.orderProductIndex\n        };\n        newOrderedProducts[orderProductIndex].quantity = newProducts[productIndex].availableCount - 1;\n      }\n\n      return { ...state,\n        products: newProducts,\n        orederedProducts: addOrdeerProduct(state.orederedProducts)\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/work/Desktop/AshotHakobyan/checkout-react/src/slicer/Store.js"],"names":["act","reducer","state","action","type","showLoadingState","products","productIndex","find","product","id","newProducts","availableCount","orderProductIndex","orederedProducts","newOrderedProducts","quantity","addOrdeerProduct"],"mappings":"AAAA,SAASA,GAAT,QAAoB,wBAApB;AAEA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACxC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,sBAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELG,QAAAA,gBAAgB,EAAE,CAACH,KAAK,CAACG;AAFpB,OAAP;;AAIF,SAAK,cAAL;AACE,aAAO,EACL,GAAGH,KADE;AAELI,QAAAA,QAAQ,EAAEH,MAAM,CAACG;AAFZ,OAAP;;AAIA,SAAK,WAAL;AACE,YAAMC,YAAY,GAAGL,KAAK,CAACI,QAAN,CAAeE,IAAf,CAAoBC,OAAO,IAAEA,OAAO,CAACC,EAAR,KAAeP,MAAM,CAACO,EAAnD,CAArB;AACA,YAAMC,WAAW,GAAG,EAAC,GAAGT,KAAK,CAACI;AAAV,OAApB;AACAK,MAAAA,WAAW,CAACJ,YAAD,CAAX,CAA0BK,cAA1B,GAA2CD,WAAW,CAACJ,YAAD,CAAX,CAA0BK,cAA1B,GAAyC,CAApF;AAEA,YAAMC,iBAAiB,GAAGX,KAAK,CAACY,gBAAN,CAAuBN,IAAvB,CAA4BC,OAAO,IAAEA,OAAO,CAACC,EAAR,KAAeP,MAAM,CAACO,EAA3D,CAA1B;;AACA,UAAGG,iBAAH,EAAqB;AACnB,cAAME,kBAAkB,GAAG,EAAC,GAAGb,KAAK,CAACW;AAAV,SAA3B;AACAE,QAAAA,kBAAkB,CAACF,iBAAD,CAAlB,CAAsCG,QAAtC,GAAiDL,WAAW,CAACJ,YAAD,CAAX,CAA0BK,cAA1B,GAAyC,CAA1F;AACD;;AAGD,aAAM,EACJ,GAAGV,KADC;AAEJI,QAAAA,QAAQ,EAACK,WAFL;AAGJG,QAAAA,gBAAgB,EAACG,gBAAgB,CAACf,KAAK,CAACY,gBAAP;AAH7B,OAAN;;AAKJ;AACE,aAAOZ,KAAP;AA7BJ;AA+BD,CAhCM","sourcesContent":["import { act } from \"@testing-library/react\";\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE_LOADING_STATE\":\n      return {\n        ...state,\n        showLoadingState: !state.showLoadingState,\n      };\n    case \"SET_PRODUCTS\":\n      return {\n        ...state,\n        products: action.products,\n      };\n      case \"ADD_ORDER\":\n        const productIndex = state.products.find(product=>product.id === action.id)\n        const newProducts = {...state.products}\n        newProducts[productIndex].availableCount = newProducts[productIndex].availableCount-1\n        \n        const orderProductIndex = state.orederedProducts.find(product=>product.id === action.id)\n        if(orderProductIndex){\n          const newOrderedProducts = {...state.orderProductIndex}\n          newOrderedProducts[orderProductIndex].quantity = newProducts[productIndex].availableCount-1\n        }\n      \n\n        return{\n          ...state,\n          products:newProducts,\n          orederedProducts:addOrdeerProduct(state.orederedProducts,)\n        }\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}