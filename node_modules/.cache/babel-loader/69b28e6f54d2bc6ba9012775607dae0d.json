{"ast":null,"code":"export const reducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE_LOADING_STATE\":\n      return { ...state,\n        showLoadingState: !state.showLoadingState\n      };\n\n    case \"SET_PRODUCTS\":\n      return { ...state,\n        products: action.products\n      };\n\n    case \"ADD_ORDER\":\n      const {\n        newProducts,\n        newOrderedProducts,\n        newTotalPrice\n      } = addOrder(action.id, action.index, state.products, state.orderedProducts, state.totalPrice, action.price);\n      return { ...state,\n        products: newProducts,\n        orderedProducts: newOrderedProducts,\n        totalPrice: newTotalPrice\n      };\n\n    case \"REMOVE_ORDER\":\n      const cloneOrdered = [...state.orderedProducts];\n      const cloneOrder = { ...cloneOrdered.find(product => product.id === action.id)\n      };\n      const OrderIndex = cloneOrdered.findIndex(product => product.id === action.id);\n      const cloneProducts = [...state.products];\n      const productIndex = cloneProducts.findIndex(product => product.id === action.id);\n      const cloneProduct = { ...cloneProducts[productIndex]\n      };\n\n      if (cloneProduct.availableCount === 0) {\n        cloneProduct.addButtonState = true;\n      }\n\n      cloneProduct.availableCount = cloneProduct.availableCount + 1;\n\n      if (cloneOrder.quantity > 1) {\n        cloneOrder.quantity = cloneOrder.quantity - 1;\n        cloneOrdered[OrderIndex] = cloneOrder;\n      } else {\n        cloneOrdered.splice(OrderIndex, 1);\n        cloneProduct.removeButtonState = false;\n      }\n\n      cloneProducts.splice(productIndex, 1, cloneProduct);\n      return { ...state,\n        orderedProducts: cloneOrdered,\n        totalPrice: state.totalPrice - action.price,\n        products: cloneProducts\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/work/Desktop/AshotHakobyan/checkout-react/src/slicer/Store.js"],"names":["reducer","state","action","type","showLoadingState","products","newProducts","newOrderedProducts","newTotalPrice","addOrder","id","index","orderedProducts","totalPrice","price","cloneOrdered","cloneOrder","find","product","OrderIndex","findIndex","cloneProducts","productIndex","cloneProduct","availableCount","addButtonState","quantity","splice","removeButtonState"],"mappings":"AAEA,OAAO,MAAMA,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACxC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,sBAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELG,QAAAA,gBAAgB,EAAE,CAACH,KAAK,CAACG;AAFpB,OAAP;;AAIF,SAAK,cAAL;AACE,aAAO,EACL,GAAGH,KADE;AAELI,QAAAA,QAAQ,EAAEH,MAAM,CAACG;AAFZ,OAAP;;AAIF,SAAK,WAAL;AACE,YAAM;AAAEC,QAAAA,WAAF;AAAeC,QAAAA,kBAAf;AAAmCC,QAAAA;AAAnC,UAAqDC,QAAQ,CACjEP,MAAM,CAACQ,EAD0D,EAEjER,MAAM,CAACS,KAF0D,EAGjEV,KAAK,CAACI,QAH2D,EAIjEJ,KAAK,CAACW,eAJ2D,EAKjEX,KAAK,CAACY,UAL2D,EAMjEX,MAAM,CAACY,KAN0D,CAAnE;AAQA,aAAO,EACL,GAAGb,KADE;AAELI,QAAAA,QAAQ,EAAEC,WAFL;AAGLM,QAAAA,eAAe,EAAEL,kBAHZ;AAILM,QAAAA,UAAU,EAAEL;AAJP,OAAP;;AAOF,SAAK,cAAL;AACE,YAAMO,YAAY,GAAG,CAAC,GAAGd,KAAK,CAACW,eAAV,CAArB;AACA,YAAMI,UAAU,GAAG,EACjB,GAAGD,YAAY,CAACE,IAAb,CAAmBC,OAAD,IAAaA,OAAO,CAACR,EAAR,KAAeR,MAAM,CAACQ,EAArD;AADc,OAAnB;AAGA,YAAMS,UAAU,GAAGJ,YAAY,CAACK,SAAb,CAChBF,OAAD,IAAaA,OAAO,CAACR,EAAR,KAAeR,MAAM,CAACQ,EADlB,CAAnB;AAGA,YAAMW,aAAa,GAAG,CAAC,GAAGpB,KAAK,CAACI,QAAV,CAAtB;AACA,YAAMiB,YAAY,GAAGD,aAAa,CAACD,SAAd,CAClBF,OAAD,IAAaA,OAAO,CAACR,EAAR,KAAeR,MAAM,CAACQ,EADhB,CAArB;AAGA,YAAMa,YAAY,GAAG,EAAE,GAAGF,aAAa,CAACC,YAAD;AAAlB,OAArB;;AACA,UAAIC,YAAY,CAACC,cAAb,KAAgC,CAApC,EAAuC;AACrCD,QAAAA,YAAY,CAACE,cAAb,GAA8B,IAA9B;AACD;;AAEDF,MAAAA,YAAY,CAACC,cAAb,GAA8BD,YAAY,CAACC,cAAb,GAA8B,CAA5D;;AAEA,UAAIR,UAAU,CAACU,QAAX,GAAsB,CAA1B,EAA6B;AAC3BV,QAAAA,UAAU,CAACU,QAAX,GAAsBV,UAAU,CAACU,QAAX,GAAsB,CAA5C;AACAX,QAAAA,YAAY,CAACI,UAAD,CAAZ,GAA2BH,UAA3B;AACD,OAHD,MAGO;AACLD,QAAAA,YAAY,CAACY,MAAb,CAAoBR,UAApB,EAAgC,CAAhC;AACAI,QAAAA,YAAY,CAACK,iBAAb,GAAiC,KAAjC;AACD;;AACDP,MAAAA,aAAa,CAACM,MAAd,CAAqBL,YAArB,EAAmC,CAAnC,EAAsCC,YAAtC;AAEA,aAAO,EACL,GAAGtB,KADE;AAELW,QAAAA,eAAe,EAAEG,YAFZ;AAGLF,QAAAA,UAAU,EAAEZ,KAAK,CAACY,UAAN,GAAmBX,MAAM,CAACY,KAHjC;AAILT,QAAAA,QAAQ,EAAEgB;AAJL,OAAP;;AAOF;AACE,aAAOpB,KAAP;AA/DJ;AAiED,CAlEM","sourcesContent":["\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE_LOADING_STATE\":\n      return {\n        ...state,\n        showLoadingState: !state.showLoadingState,\n      };\n    case \"SET_PRODUCTS\":\n      return {\n        ...state,\n        products: action.products,\n      };\n    case \"ADD_ORDER\":\n      const { newProducts, newOrderedProducts, newTotalPrice } = addOrder(\n        action.id,\n        action.index,\n        state.products,\n        state.orderedProducts,\n        state.totalPrice,\n        action.price\n      );\n      return {\n        ...state,\n        products: newProducts,\n        orderedProducts: newOrderedProducts,\n        totalPrice: newTotalPrice,\n      };\n\n    case \"REMOVE_ORDER\":\n      const cloneOrdered = [...state.orderedProducts];\n      const cloneOrder = {\n        ...cloneOrdered.find((product) => product.id === action.id),\n      };\n      const OrderIndex = cloneOrdered.findIndex(\n        (product) => product.id === action.id\n      );\n      const cloneProducts = [...state.products];\n      const productIndex = cloneProducts.findIndex(\n        (product) => product.id === action.id\n      );\n      const cloneProduct = { ...cloneProducts[productIndex] };\n      if (cloneProduct.availableCount === 0) {\n        cloneProduct.addButtonState = true;\n      }\n\n      cloneProduct.availableCount = cloneProduct.availableCount + 1;\n\n      if (cloneOrder.quantity > 1) {\n        cloneOrder.quantity = cloneOrder.quantity - 1;\n        cloneOrdered[OrderIndex] = cloneOrder;\n      } else {\n        cloneOrdered.splice(OrderIndex, 1);\n        cloneProduct.removeButtonState = false;\n      }\n      cloneProducts.splice(productIndex, 1, cloneProduct);\n\n      return {\n        ...state,\n        orderedProducts: cloneOrdered,\n        totalPrice: state.totalPrice - action.price,\n        products: cloneProducts,\n      };\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}