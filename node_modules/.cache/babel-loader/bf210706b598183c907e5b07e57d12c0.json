{"ast":null,"code":"import { act } from \"@testing-library/react\";\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE_LOADING_STATE\":\n      return { ...state,\n        showLoadingState: !state.showLoadingState\n      };\n\n    case \"SET_PRODUCTS\":\n      return { ...state,\n        products: action.products\n      };\n\n    case \"ADD_ORDER\":\n      const addedProduct = state.products.find(product => product.id === action.id);\n      const newAddedProduct = { ...addedProduct\n      };\n      newAddedProduct.availableCount = newAddedProduct.availableCount - 1;\n      const newProducts = { ...state.products\n      };\n      newProducts.splice(action.index, 1, newAddedProduct); // const orderProductIndex = state.orderedProducts.find(\n      //   (product) => product.id === action.id\n      // );\n      // const newOrderedProducts = { ...state.orderedProducts };\n      // if (orderProductIndex) {\n      //   newOrderedProducts[orderProductIndex].quantity =\n      //     newOrderedProducts[orderProductIndex].quantity + 1;\n      // } else {\n      //   const orderedProduct = {\n      //     id: action.id,\n      //     quantity: 0,\n      //     name: newProducts[productIndex].name,\n      //     price: newProducts[productIndex].price,\n      //   };\n      //   newOrderedProducts.push(orderedProduct);\n      // }\n\n      return { ...state // products: newProducts,\n        // orderedProducts: newOrderedProducts,\n\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/hakob/Desktop/products/src/slicer/Store.js"],"names":["act","reducer","state","action","type","showLoadingState","products","addedProduct","find","product","id","newAddedProduct","availableCount","newProducts","splice","index"],"mappings":"AAAA,SAASA,GAAT,QAAoB,wBAApB;AAEA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACxC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,sBAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELG,QAAAA,gBAAgB,EAAE,CAACH,KAAK,CAACG;AAFpB,OAAP;;AAIF,SAAK,cAAL;AACE,aAAO,EACL,GAAGH,KADE;AAELI,QAAAA,QAAQ,EAAEH,MAAM,CAACG;AAFZ,OAAP;;AAIF,SAAK,WAAL;AACE,YAAMC,YAAY,GAAGL,KAAK,CAACI,QAAN,CAAeE,IAAf,CAClBC,OAAD,IAAaA,OAAO,CAACC,EAAR,KAAeP,MAAM,CAACO,EADhB,CAArB;AAIA,YAAMC,eAAe,GAAG,EAAE,GAAGJ;AAAL,OAAxB;AACAI,MAAAA,eAAe,CAACC,cAAhB,GAAiCD,eAAe,CAACC,cAAhB,GAAiC,CAAlE;AACA,YAAMC,WAAW,GAAG,EAAE,GAAGX,KAAK,CAACI;AAAX,OAApB;AACAO,MAAAA,WAAW,CAACC,MAAZ,CAAmBX,MAAM,CAACY,KAA1B,EAAiC,CAAjC,EAAoCJ,eAApC,EARF,CASE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAO,EACL,GAAGT,KADE,CAEL;AACA;;AAHK,OAAP;;AAKF;AACE,aAAOA,KAAP;AA3CJ;AA6CD,CA9CM","sourcesContent":["import { act } from \"@testing-library/react\";\r\n\r\nexport const reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE_LOADING_STATE\":\r\n      return {\r\n        ...state,\r\n        showLoadingState: !state.showLoadingState,\r\n      };\r\n    case \"SET_PRODUCTS\":\r\n      return {\r\n        ...state,\r\n        products: action.products,\r\n      };\r\n    case \"ADD_ORDER\":\r\n      const addedProduct = state.products.find(\r\n        (product) => product.id === action.id\r\n      );\r\n\r\n      const newAddedProduct = { ...addedProduct };\r\n      newAddedProduct.availableCount = newAddedProduct.availableCount - 1;\r\n      const newProducts = { ...state.products };\r\n      newProducts.splice(action.index, 1, newAddedProduct);\r\n      // const orderProductIndex = state.orderedProducts.find(\r\n      //   (product) => product.id === action.id\r\n      // );\r\n      // const newOrderedProducts = { ...state.orderedProducts };\r\n      // if (orderProductIndex) {\r\n      //   newOrderedProducts[orderProductIndex].quantity =\r\n      //     newOrderedProducts[orderProductIndex].quantity + 1;\r\n      // } else {\r\n      //   const orderedProduct = {\r\n      //     id: action.id,\r\n      //     quantity: 0,\r\n      //     name: newProducts[productIndex].name,\r\n      //     price: newProducts[productIndex].price,\r\n      //   };\r\n      //   newOrderedProducts.push(orderedProduct);\r\n      // }\r\n\r\n      return {\r\n        ...state,\r\n        // products: newProducts,\r\n        // orderedProducts: newOrderedProducts,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}