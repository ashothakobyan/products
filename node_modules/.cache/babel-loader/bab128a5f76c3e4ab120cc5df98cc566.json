{"ast":null,"code":"export const removeOrder = (orderedProducts, id, products, tot) => {\n  const cloneOrdered = [...state.orderedProducts];\n  const cloneOrder = { ...cloneOrdered.find(product => product.id === action.id)\n  };\n  const OrderIndex = cloneOrdered.findIndex(product => product.id === action.id);\n  const cloneProducts = [...state.products];\n  const productIndex = cloneProducts.findIndex(product => product.id === action.id);\n  const cloneProduct = { ...cloneProducts[productIndex]\n  };\n\n  if (cloneProduct.availableCount === 0) {\n    cloneProduct.addButtonState = true;\n  }\n\n  cloneProduct.availableCount = cloneProduct.availableCount + 1;\n\n  if (cloneOrder.quantity > 1) {\n    cloneOrder.quantity = cloneOrder.quantity - 1;\n    cloneOrdered[OrderIndex] = cloneOrder;\n  } else {\n    cloneOrdered.splice(OrderIndex, 1);\n    cloneProduct.removeButtonState = false;\n  }\n\n  cloneProducts.splice(productIndex, 1, cloneProduct);\n};","map":{"version":3,"sources":["/home/work/Desktop/AshotHakobyan/checkout-react/src/helperFunction/removeOrder.js"],"names":["removeOrder","orderedProducts","id","products","tot","cloneOrdered","state","cloneOrder","find","product","action","OrderIndex","findIndex","cloneProducts","productIndex","cloneProduct","availableCount","addButtonState","quantity","splice","removeButtonState"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG,CAACC,eAAD,EAAiBC,EAAjB,EAAoBC,QAApB,EAA6BC,GAA7B,KAAqC;AAC5D,QAAMC,YAAY,GAAG,CAAC,GAAGC,KAAK,CAACL,eAAV,CAArB;AACA,QAAMM,UAAU,GAAG,EACjB,GAAGF,YAAY,CAACG,IAAb,CAAmBC,OAAD,IAAaA,OAAO,CAACP,EAAR,KAAeQ,MAAM,CAACR,EAArD;AADc,GAAnB;AAGA,QAAMS,UAAU,GAAGN,YAAY,CAACO,SAAb,CAChBH,OAAD,IAAaA,OAAO,CAACP,EAAR,KAAeQ,MAAM,CAACR,EADlB,CAAnB;AAGA,QAAMW,aAAa,GAAG,CAAC,GAAGP,KAAK,CAACH,QAAV,CAAtB;AACA,QAAMW,YAAY,GAAGD,aAAa,CAACD,SAAd,CAClBH,OAAD,IAAaA,OAAO,CAACP,EAAR,KAAeQ,MAAM,CAACR,EADhB,CAArB;AAGA,QAAMa,YAAY,GAAG,EAAE,GAAGF,aAAa,CAACC,YAAD;AAAlB,GAArB;;AACA,MAAIC,YAAY,CAACC,cAAb,KAAgC,CAApC,EAAuC;AACrCD,IAAAA,YAAY,CAACE,cAAb,GAA8B,IAA9B;AACD;;AAEDF,EAAAA,YAAY,CAACC,cAAb,GAA8BD,YAAY,CAACC,cAAb,GAA8B,CAA5D;;AAEA,MAAIT,UAAU,CAACW,QAAX,GAAsB,CAA1B,EAA6B;AAC3BX,IAAAA,UAAU,CAACW,QAAX,GAAsBX,UAAU,CAACW,QAAX,GAAsB,CAA5C;AACAb,IAAAA,YAAY,CAACM,UAAD,CAAZ,GAA2BJ,UAA3B;AACD,GAHD,MAGO;AACLF,IAAAA,YAAY,CAACc,MAAb,CAAoBR,UAApB,EAAgC,CAAhC;AACAI,IAAAA,YAAY,CAACK,iBAAb,GAAiC,KAAjC;AACD;;AACDP,EAAAA,aAAa,CAACM,MAAd,CAAqBL,YAArB,EAAmC,CAAnC,EAAsCC,YAAtC;AAEH,CA5BM","sourcesContent":["export const removeOrder = (orderedProducts,id,products,tot) => {\n    const cloneOrdered = [...state.orderedProducts];\n    const cloneOrder = {\n      ...cloneOrdered.find((product) => product.id === action.id),\n    };\n    const OrderIndex = cloneOrdered.findIndex(\n      (product) => product.id === action.id\n    );\n    const cloneProducts = [...state.products];\n    const productIndex = cloneProducts.findIndex(\n      (product) => product.id === action.id\n    );\n    const cloneProduct = { ...cloneProducts[productIndex] };\n    if (cloneProduct.availableCount === 0) {\n      cloneProduct.addButtonState = true;\n    }\n\n    cloneProduct.availableCount = cloneProduct.availableCount + 1;\n\n    if (cloneOrder.quantity > 1) {\n      cloneOrder.quantity = cloneOrder.quantity - 1;\n      cloneOrdered[OrderIndex] = cloneOrder;\n    } else {\n      cloneOrdered.splice(OrderIndex, 1);\n      cloneProduct.removeButtonState = false;\n    }\n    cloneProducts.splice(productIndex, 1, cloneProduct);\n\n};\n"]},"metadata":{},"sourceType":"module"}