{"ast":null,"code":"export const addOrder = (id, index, products, orders, totalPrice) => {\n  const addedProduct = products.find(product => product.id === action.id);\n  const newAddedProduct = { ...addedProduct\n  };\n  newAddedProduct.availableCount = newAddedProduct.availableCount - 1;\n  const newProducts = [...products];\n  newProducts.splice(action.index, 1, newAddedProduct);\n  const orderProductIndex = orderedProducts.findIndex(product => product.id === action.id);\n  const newOrderedProducts = [...state.orderedProducts];\n\n  if (orderProductIndex !== -1) {\n    const cloneOrderedProduct = { ...newOrderedProducts[orderProductIndex]\n    };\n    cloneOrderedProduct.quantity = newOrderedProducts[orderProductIndex].quantity + 1;\n    newOrderedProducts[orderProductIndex] = cloneOrderedProduct;\n  } else {\n    const orderedProduct = {\n      id: action.id,\n      quantity: 1,\n      name: newAddedProduct.name,\n      price: newAddedProduct.price\n    };\n    newOrderedProducts.push(orderedProduct);\n    newProducts[action.index].removeButtonState = true;\n  }\n\n  if (newProducts[action.index].availableCount === 0) {\n    newProducts[action.index].addButtonState = false;\n  }\n};","map":{"version":3,"sources":["/home/work/Desktop/AshotHakobyan/checkout-react/src/felperFunction/addOrder.js"],"names":["addOrder","id","index","products","orders","totalPrice","addedProduct","find","product","action","newAddedProduct","availableCount","newProducts","splice","orderProductIndex","orderedProducts","findIndex","newOrderedProducts","state","cloneOrderedProduct","quantity","orderedProduct","name","price","push","removeButtonState","addButtonState"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAE,CAACC,EAAD,EAAIC,KAAJ,EAAUC,QAAV,EAAmBC,MAAnB,EAA0BC,UAA1B,KAAuC;AAC1D,QAAMC,YAAY,GAAGH,QAAQ,CAACI,IAAT,CAChBC,OAAD,IAAaA,OAAO,CAACP,EAAR,KAAeQ,MAAM,CAACR,EADlB,CAArB;AAIE,QAAMS,eAAe,GAAG,EAAE,GAAGJ;AAAL,GAAxB;AACAI,EAAAA,eAAe,CAACC,cAAhB,GAAiCD,eAAe,CAACC,cAAhB,GAAiC,CAAlE;AACA,QAAMC,WAAW,GAAG,CAAC,GAAGT,QAAJ,CAApB;AAEAS,EAAAA,WAAW,CAACC,MAAZ,CAAmBJ,MAAM,CAACP,KAA1B,EAAiC,CAAjC,EAAoCQ,eAApC;AAEA,QAAMI,iBAAiB,GAAGC,eAAe,CAACC,SAAhB,CACvBR,OAAD,IAAaA,OAAO,CAACP,EAAR,KAAeQ,MAAM,CAACR,EADX,CAA1B;AAGA,QAAMgB,kBAAkB,GAAG,CAAC,GAAGC,KAAK,CAACH,eAAV,CAA3B;;AACA,MAAID,iBAAiB,KAAK,CAAC,CAA3B,EAA8B;AAC5B,UAAMK,mBAAmB,GAAG,EAC1B,GAAGF,kBAAkB,CAACH,iBAAD;AADK,KAA5B;AAGAK,IAAAA,mBAAmB,CAACC,QAApB,GACEH,kBAAkB,CAACH,iBAAD,CAAlB,CAAsCM,QAAtC,GAAiD,CADnD;AAEAH,IAAAA,kBAAkB,CAACH,iBAAD,CAAlB,GAAwCK,mBAAxC;AACD,GAPD,MAOO;AACL,UAAME,cAAc,GAAG;AACrBpB,MAAAA,EAAE,EAAEQ,MAAM,CAACR,EADU;AAErBmB,MAAAA,QAAQ,EAAE,CAFW;AAGrBE,MAAAA,IAAI,EAAEZ,eAAe,CAACY,IAHD;AAIrBC,MAAAA,KAAK,EAAEb,eAAe,CAACa;AAJF,KAAvB;AAMAN,IAAAA,kBAAkB,CAACO,IAAnB,CAAwBH,cAAxB;AACAT,IAAAA,WAAW,CAACH,MAAM,CAACP,KAAR,CAAX,CAA0BuB,iBAA1B,GAA8C,IAA9C;AACD;;AACD,MAAIb,WAAW,CAACH,MAAM,CAACP,KAAR,CAAX,CAA0BS,cAA1B,KAA6C,CAAjD,EAAoD;AAClDC,IAAAA,WAAW,CAACH,MAAM,CAACP,KAAR,CAAX,CAA0BwB,cAA1B,GAA2C,KAA3C;AACD;AACN,CAnCM","sourcesContent":["export const addOrder =(id,index,products,orders,totalPrice)=>{\n    const addedProduct = products.find(\n        (product) => product.id === action.id\n      );\n\n      const newAddedProduct = { ...addedProduct };\n      newAddedProduct.availableCount = newAddedProduct.availableCount - 1;\n      const newProducts = [...products];\n\n      newProducts.splice(action.index, 1, newAddedProduct);\n\n      const orderProductIndex = orderedProducts.findIndex(\n        (product) => product.id === action.id\n      );\n      const newOrderedProducts = [...state.orderedProducts];\n      if (orderProductIndex !== -1) {\n        const cloneOrderedProduct = {\n          ...newOrderedProducts[orderProductIndex],\n        };\n        cloneOrderedProduct.quantity =\n          newOrderedProducts[orderProductIndex].quantity + 1;\n        newOrderedProducts[orderProductIndex] = cloneOrderedProduct;\n      } else {\n        const orderedProduct = {\n          id: action.id,\n          quantity: 1,\n          name: newAddedProduct.name,\n          price: newAddedProduct.price,\n        };\n        newOrderedProducts.push(orderedProduct);\n        newProducts[action.index].removeButtonState = true;\n      }\n      if (newProducts[action.index].availableCount === 0) {\n        newProducts[action.index].addButtonState = false;\n      }\n}"]},"metadata":{},"sourceType":"module"}