{"ast":null,"code":"export const removeOrder = (orderedProducts, id) => {\n  const cloneOrdered = [...state.orderedProducts];\n  const cloneOrder = { ...cloneOrdered.find(product => product.id === action.id)\n  };\n  const OrderIndex = cloneOrdered.findIndex(product => product.id === action.id);\n  const cloneProducts = [...state.products];\n  const productIndex = cloneProducts.findIndex(product => product.id === action.id);\n  const cloneProduct = { ...cloneProducts[productIndex]\n  };\n\n  if (cloneProduct.availableCount === 0) {\n    cloneProduct.addButtonState = true;\n  }\n\n  cloneProduct.availableCount = cloneProduct.availableCount + 1;\n\n  if (cloneOrder.quantity > 1) {\n    cloneOrder.quantity = cloneOrder.quantity - 1;\n    cloneOrdered[OrderIndex] = cloneOrder;\n  } else {\n    cloneOrdered.splice(OrderIndex, 1);\n    cloneProduct.removeButtonState = false;\n  }\n\n  cloneProducts.splice(productIndex, 1, cloneProduct);\n};","map":{"version":3,"sources":["/home/work/Desktop/AshotHakobyan/checkout-react/src/helperFunction/removeOrder.js"],"names":["removeOrder","orderedProducts","id","cloneOrdered","state","cloneOrder","find","product","action","OrderIndex","findIndex","cloneProducts","products","productIndex","cloneProduct","availableCount","addButtonState","quantity","splice","removeButtonState"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG,CAACC,eAAD,EAAiBC,EAAjB,KAAwB;AAC/C,QAAMC,YAAY,GAAG,CAAC,GAAGC,KAAK,CAACH,eAAV,CAArB;AACA,QAAMI,UAAU,GAAG,EACjB,GAAGF,YAAY,CAACG,IAAb,CAAmBC,OAAD,IAAaA,OAAO,CAACL,EAAR,KAAeM,MAAM,CAACN,EAArD;AADc,GAAnB;AAGA,QAAMO,UAAU,GAAGN,YAAY,CAACO,SAAb,CAChBH,OAAD,IAAaA,OAAO,CAACL,EAAR,KAAeM,MAAM,CAACN,EADlB,CAAnB;AAGA,QAAMS,aAAa,GAAG,CAAC,GAAGP,KAAK,CAACQ,QAAV,CAAtB;AACA,QAAMC,YAAY,GAAGF,aAAa,CAACD,SAAd,CAClBH,OAAD,IAAaA,OAAO,CAACL,EAAR,KAAeM,MAAM,CAACN,EADhB,CAArB;AAGA,QAAMY,YAAY,GAAG,EAAE,GAAGH,aAAa,CAACE,YAAD;AAAlB,GAArB;;AACA,MAAIC,YAAY,CAACC,cAAb,KAAgC,CAApC,EAAuC;AACrCD,IAAAA,YAAY,CAACE,cAAb,GAA8B,IAA9B;AACD;;AAEDF,EAAAA,YAAY,CAACC,cAAb,GAA8BD,YAAY,CAACC,cAAb,GAA8B,CAA5D;;AAEA,MAAIV,UAAU,CAACY,QAAX,GAAsB,CAA1B,EAA6B;AAC3BZ,IAAAA,UAAU,CAACY,QAAX,GAAsBZ,UAAU,CAACY,QAAX,GAAsB,CAA5C;AACAd,IAAAA,YAAY,CAACM,UAAD,CAAZ,GAA2BJ,UAA3B;AACD,GAHD,MAGO;AACLF,IAAAA,YAAY,CAACe,MAAb,CAAoBT,UAApB,EAAgC,CAAhC;AACAK,IAAAA,YAAY,CAACK,iBAAb,GAAiC,KAAjC;AACD;;AACDR,EAAAA,aAAa,CAACO,MAAd,CAAqBL,YAArB,EAAmC,CAAnC,EAAsCC,YAAtC;AAEH,CA5BM","sourcesContent":["export const removeOrder = (orderedProducts,id) => {\n    const cloneOrdered = [...state.orderedProducts];\n    const cloneOrder = {\n      ...cloneOrdered.find((product) => product.id === action.id),\n    };\n    const OrderIndex = cloneOrdered.findIndex(\n      (product) => product.id === action.id\n    );\n    const cloneProducts = [...state.products];\n    const productIndex = cloneProducts.findIndex(\n      (product) => product.id === action.id\n    );\n    const cloneProduct = { ...cloneProducts[productIndex] };\n    if (cloneProduct.availableCount === 0) {\n      cloneProduct.addButtonState = true;\n    }\n\n    cloneProduct.availableCount = cloneProduct.availableCount + 1;\n\n    if (cloneOrder.quantity > 1) {\n      cloneOrder.quantity = cloneOrder.quantity - 1;\n      cloneOrdered[OrderIndex] = cloneOrder;\n    } else {\n      cloneOrdered.splice(OrderIndex, 1);\n      cloneProduct.removeButtonState = false;\n    }\n    cloneProducts.splice(productIndex, 1, cloneProduct);\n\n};\n"]},"metadata":{},"sourceType":"module"}