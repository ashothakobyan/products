{"ast":null,"code":"export const reducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE_LOADING_STATE\":\n      return { ...state,\n        showLoadingState: !state.showLoadingState\n      };\n\n    case \"SET_PRODUCTS\":\n      return { ...state,\n        products: action.products\n      };\n\n    case \"ADD_ORDER\":\n      const addedProduct = state.products.find(product => product.id === action.id);\n      const newAddedProduct = { ...addedProduct\n      };\n      newAddedProduct.availableCount = newAddedProduct.availableCount - 1;\n      const newProducts = [...state.products];\n      newProducts.splice(action.index, 1, newAddedProduct);\n      const orderProductIndex = state.orderedProducts.findIndex(product => product.id === action.id);\n      const newOrderedProducts = [...state.orderedProducts];\n\n      if (orderProductIndex !== -1) {\n        const cloneOrderedProduct = { ...newOrderedProducts[orderProductIndex]\n        };\n        cloneOrderedProduct.quantity = newOrderedProducts[orderProductIndex].quantity + 1;\n        newOrderedProducts[orderProductIndex] = cloneOrderedProduct;\n      } else {\n        const orderedProduct = {\n          id: action.id,\n          quantity: 1,\n          name: newAddedProduct.name,\n          price: newAddedProduct.price\n        };\n        newOrderedProducts.push(orderedProduct);\n        newProducts[action.index].removeButtonState = true;\n      }\n\n      if (newProducts[action.index].availableCount === 0) {\n        newProducts[action.index].addButtonState = false;\n      }\n\n      return { ...state,\n        products: newProducts,\n        orderedProducts: newOrderedProducts,\n        totalPrice: state.totalPrice + action.price\n      };\n\n    case \"REMOVE_ORDER\":\n      const cloneOrdered = [...state.orderedProducts];\n      const cloneOrder = { ...cloneOrdered.find(product => product.id === action.id)\n      };\n      const OrderIndex = cloneOrdered.findIndex(product => product.id === action.id);\n      const cloneProducts = [...state.products];\n      const productIndex = cloneProducts.findIndex(product => product.id === action.id);\n      const cloneProduct = { ...cloneProducts[productIndex]\n      };\n\n      if (cloneProduct.availableCount === 0) {\n        cloneProduct.addButtonState = true;\n      }\n\n      cloneProduct.availableCount = cloneProduct.availableCount + 1;\n\n      if (cloneOrder.quantity > 1) {\n        cloneOrder.quantity = cloneOrder.quantity - 1;\n        cloneOrdered[OrderIndex] = cloneOrder;\n      } else {\n        cloneOrdered.splice(OrderIndex, 1);\n        cloneProduct.removeButtonState = false;\n      }\n\n      cloneProducts.splice(productIndex, 1, cloneProduct);\n      return { ...state,\n        orderedProducts: cloneOrdered,\n        totalPrice: state.totalPrice - action.price,\n        products: cloneProducts\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/work/Desktop/AshotHakobyan/checkout-react/src/slicer/Store.js"],"names":["reducer","state","action","type","showLoadingState","products","addedProduct","find","product","id","newAddedProduct","availableCount","newProducts","splice","index","orderProductIndex","orderedProducts","findIndex","newOrderedProducts","cloneOrderedProduct","quantity","orderedProduct","name","price","push","removeButtonState","addButtonState","totalPrice","cloneOrdered","cloneOrder","OrderIndex","cloneProducts","productIndex","cloneProduct"],"mappings":"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","sourcesContent":["export const reducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE_LOADING_STATE\":\n      return {\n        ...state,\n        showLoadingState: !state.showLoadingState,\n      };\n    case \"SET_PRODUCTS\":\n      return {\n        ...state,\n        products: action.products,\n      };\n    case \"ADD_ORDER\":\n      const addedProduct = state.products.find(\n        (product) => product.id === action.id\n      );\n\n      const newAddedProduct = { ...addedProduct };\n      newAddedProduct.availableCount = newAddedProduct.availableCount - 1;\n      const newProducts = [...state.products];\n\n      newProducts.splice(action.index, 1, newAddedProduct);\n\n      const orderProductIndex = state.orderedProducts.findIndex(\n        (product) => product.id === action.id\n      );\n      const newOrderedProducts = [...state.orderedProducts];\n      if (orderProductIndex !== -1) {\n        const cloneOrderedProduct = {\n          ...newOrderedProducts[orderProductIndex],\n        };\n        cloneOrderedProduct.quantity =\n          newOrderedProducts[orderProductIndex].quantity + 1;\n        newOrderedProducts[orderProductIndex] = cloneOrderedProduct;\n      } else {\n        const orderedProduct = {\n          id: action.id,\n          quantity: 1,\n          name: newAddedProduct.name,\n          price: newAddedProduct.price,\n        };\n        newOrderedProducts.push(orderedProduct);\n        newProducts[action.index].removeButtonState = true;\n      }\n      if (newProducts[action.index].availableCount === 0) {\n        newProducts[action.index].addButtonState = false;\n      }\n      return {\n        ...state,\n        products: newProducts,\n        orderedProducts: newOrderedProducts,\n        totalPrice: state.totalPrice + action.price,\n      };\n\n    case \"REMOVE_ORDER\":\n      const cloneOrdered = [...state.orderedProducts];\n      const cloneOrder = {\n        ...cloneOrdered.find((product) => product.id === action.id),\n      };\n      const OrderIndex = cloneOrdered.findIndex(\n        (product) => product.id === action.id\n      );\n      const cloneProducts = [...state.products];\n      const productIndex = cloneProducts.findIndex(\n        (product) => product.id === action.id\n      );\n      const cloneProduct = { ...cloneProducts[productIndex] };\n      if (cloneProduct.availableCount === 0) {\n        cloneProduct.addButtonState = true;\n      }\n\n      cloneProduct.availableCount = cloneProduct.availableCount + 1;\n\n      if (cloneOrder.quantity > 1) {\n        cloneOrder.quantity = cloneOrder.quantity - 1;\n        cloneOrdered[OrderIndex] = cloneOrder;\n      } else {\n        cloneOrdered.splice(OrderIndex, 1);\n        cloneProduct.removeButtonState = false;\n      }\n      cloneProducts.splice(productIndex, 1, cloneProduct);\n\n      return {\n        ...state,\n        orderedProducts: cloneOrdered,\n        totalPrice: state.totalPrice - action.price,\n        products: cloneProducts,\n      };\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}