{"ast":null,"code":"import { act } from \"@testing-library/react\";\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE_LOADING_STATE\":\n      return { ...state,\n        showLoadingState: !state.showLoadingState\n      };\n\n    case \"SET_PRODUCTS\":\n      return { ...state,\n        products: action.products\n      };\n\n    case \"ADD_ORDER\":\n      const productIndex = state.products.find(product => product.id === action.id);\n      const newProducts = { ...state.products\n      };\n      newProducts[productIndex].availableCount = newProducts[productIndex].availableCount - 1;\n      const orderProductIndex = state.orederedProducts.find(product => product.id === action.id);\n      const newOrderedProducts = { ...state.orederedProducts\n      };\n\n      if (orderProductIndex) {\n        newOrderedProducts[orderProductIndex].quantity = newOrderedProducts[orderProductIndex].quantity + 1;\n      } else {\n        const orderedProduct = {\n          id: action.id,\n          quantity: 0,\n          name: newProducts[productIndex].name,\n          price: newProducts[productIndex].price\n        };\n        newOrderedProducts.push(orderedProduct);\n      }\n\n      return { ...state,\n        products: newProducts,\n        orederedProducts: newOrderedProducts\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/hakob/Desktop/products/src/slicer/Store.js"],"names":["act","reducer","state","action","type","showLoadingState","products","productIndex","find","product","id","newProducts","availableCount","orderProductIndex","orederedProducts","newOrderedProducts","quantity","orderedProduct","name","price","push"],"mappings":"AAAA,SAASA,GAAT,QAAoB,wBAApB;AAEA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACxC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,sBAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELG,QAAAA,gBAAgB,EAAE,CAACH,KAAK,CAACG;AAFpB,OAAP;;AAIF,SAAK,cAAL;AACE,aAAO,EACL,GAAGH,KADE;AAELI,QAAAA,QAAQ,EAAEH,MAAM,CAACG;AAFZ,OAAP;;AAIF,SAAK,WAAL;AACE,YAAMC,YAAY,GAAGL,KAAK,CAACI,QAAN,CAAeE,IAAf,CAClBC,OAAD,IAAaA,OAAO,CAACC,EAAR,KAAeP,MAAM,CAACO,EADhB,CAArB;AAGA,YAAMC,WAAW,GAAG,EAAE,GAAGT,KAAK,CAACI;AAAX,OAApB;AACAK,MAAAA,WAAW,CAACJ,YAAD,CAAX,CAA0BK,cAA1B,GACED,WAAW,CAACJ,YAAD,CAAX,CAA0BK,cAA1B,GAA2C,CAD7C;AAGA,YAAMC,iBAAiB,GAAGX,KAAK,CAACY,gBAAN,CAAuBN,IAAvB,CACvBC,OAAD,IAAaA,OAAO,CAACC,EAAR,KAAeP,MAAM,CAACO,EADX,CAA1B;AAGA,YAAMK,kBAAkB,GAAG,EAAE,GAAGb,KAAK,CAACY;AAAX,OAA3B;;AACA,UAAID,iBAAJ,EAAuB;AAErBE,QAAAA,kBAAkB,CAACF,iBAAD,CAAlB,CAAsCG,QAAtC,GACED,kBAAkB,CAACF,iBAAD,CAAlB,CAAsCG,QAAtC,GAAiD,CADnD;AAED,OAJD,MAIO;AACL,cAAMC,cAAc,GAAG;AACrBP,UAAAA,EAAE,EAAEP,MAAM,CAACO,EADU;AAErBM,UAAAA,QAAQ,EAAE,CAFW;AAGrBE,UAAAA,IAAI,EAAEP,WAAW,CAACJ,YAAD,CAAX,CAA0BW,IAHX;AAIrBC,UAAAA,KAAK,EAAER,WAAW,CAACJ,YAAD,CAAX,CAA0BY;AAJZ,SAAvB;AAMAJ,QAAAA,kBAAkB,CAACK,IAAnB,CAAwBH,cAAxB;AACD;;AAED,aAAO,EACL,GAAGf,KADE;AAELI,QAAAA,QAAQ,EAAEK,WAFL;AAGLG,QAAAA,gBAAgB,EAAEC;AAHb,OAAP;;AAKF;AACE,aAAOb,KAAP;AA3CJ;AA6CD,CA9CM","sourcesContent":["import { act } from \"@testing-library/react\";\r\n\r\nexport const reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE_LOADING_STATE\":\r\n      return {\r\n        ...state,\r\n        showLoadingState: !state.showLoadingState,\r\n      };\r\n    case \"SET_PRODUCTS\":\r\n      return {\r\n        ...state,\r\n        products: action.products,\r\n      };\r\n    case \"ADD_ORDER\":\r\n      const productIndex = state.products.find(\r\n        (product) => product.id === action.id\r\n      );\r\n      const newProducts = { ...state.products };\r\n      newProducts[productIndex].availableCount =\r\n        newProducts[productIndex].availableCount - 1;\r\n\r\n      const orderProductIndex = state.orederedProducts.find(\r\n        (product) => product.id === action.id\r\n      );\r\n      const newOrderedProducts = { ...state.orederedProducts }\r\n      if (orderProductIndex) {\r\n        \r\n        newOrderedProducts[orderProductIndex].quantity =\r\n          newOrderedProducts[orderProductIndex].quantity + 1;\r\n      } else {\r\n        const orderedProduct = {\r\n          id: action.id,\r\n          quantity: 0,\r\n          name: newProducts[productIndex].name,\r\n          price: newProducts[productIndex].price,\r\n        };\r\n        newOrderedProducts.push(orderedProduct)\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        products: newProducts,\r\n        orederedProducts: newOrderedProducts\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}